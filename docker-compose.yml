version: '3.8'

services:
  coordinator:
    image: citusdata/citus:12.1 
    ports:
      - "5432:5432" 
    environment:
      POSTGRES_PASSWORD: 'mypassword'
    volumes:
      - coordinator_data:/var/lib/postgresql/data
    networks:
      - citus-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      bash -c "
        # Iniciar PostgreSQL
        docker-entrypoint.sh postgres &
        # Esperar a que PostgreSQL esté listo
        until pg_isready -U postgres; do sleep 1; done;
        # Configurar Citus (añadir workers) una vez que estén listos
        sleep 10; # Dar tiempo a los workers para iniciar
        psql -U postgres -c \"SELECT citus_add_node('worker1', 5432);\"
        psql -U postgres -c \"SELECT citus_add_node('worker2', 5432);\"
        echo 'Citus coordinator configured.'
        # Mantener el contenedor corriendo esperando la señal de postgres
        wait
      "
    depends_on:
      worker1:
        condition: service_healthy
      worker2:
        condition: service_healthy

  worker1:
    image: citusdata/citus:12.1
    environment:
      POSTGRES_PASSWORD: 'mypassword'
    volumes:
      - worker1_data:/var/lib/postgresql/data
    networks:
      - citus-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  worker2:
    image: citusdata/citus:12.1
    environment:
      POSTGRES_PASSWORD: 'mypassword'
    volumes:
      - worker2_data:/var/lib/postgresql/data
    networks:
      - citus-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  coordinator_data:
  worker1_data:
  worker2_data:

networks:
  citus-net:
    driver: bridge